{"mappings":"YAAA,IAAMA,EAAOC,SAASC,cAAc,SAMpC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAACN,WAAUC,UAEnBM,EAAO,CAACP,WAAUC,S,GAEnBA,E,IAIPL,EAAKa,iBAAiB,UAAU,SAACC,GAC/BA,EAAEC,iBACF,IAAIC,EAAehB,EAAKiB,SAASZ,MAAMa,MAEnCC,GADcnB,EAAKiB,SAASG,KAAKF,MACxBlB,EAAKiB,SAASE,OAAOD,OAGlCf,EAAckB,EAAGL,GACjB,IAAK,IAAIM,EAAI,EAAGA,GAAKH,EAAQG,GAAK,EACtB,IAANA,GACFnB,EAAcmB,EAAGN,E","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector('.form')\n\n\n\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  \n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay})\n      } else {\n        reject({position, delay})\n      }\n    }, delay)\n  }\n)}\n\nform.addEventListener('submit', (e) => {\n  e.preventDefault()\n  let promiseDelay = form.elements.delay.value;\n  let promiseStep = form.elements.step.value;\n  let amount = form.elements.amount.value;\n  \n  \n  createPromise(i, promiseDelay)\n  for (let i = 1; i <= amount; i += 1) {\n    if (i === 1) {\n      createPromise(i, promiseDelay)\n    }\n  \n  }\n  \n  \n\n  })\n\n// createPromise(2, 555)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });"],"names":["$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","promiseDelay","elements","value","amount","step","i","_$i"],"version":3,"file":"03-promises.237eebbe.js.map"}